# SPDX-License-Identifier: MIT
---

# Linux Pacemaker shell, pcs or crmsh
ha_cluster_pacemaker_shell: pcs

ha_cluster_enable_repos: true
ha_cluster_enable_repos_resilient_storage: false

ha_cluster_cluster_present: true

ha_cluster_start_on_boot: true

ha_cluster_install_cloud_agents: false
ha_cluster_extra_packages: []
# Default fence agent packages are defined in respective os_family var files
ha_cluster_fence_agent_packages:
  "{{ __ha_cluster_fence_agent_packages_default }}"

ha_cluster_hacluster_password: ""
ha_cluster_regenerate_keys: false
ha_cluster_corosync_key_src: null
ha_cluster_pacemaker_key_src: null
ha_cluster_fence_virt_key_src: null
ha_cluster_pcsd_public_key_src: null
ha_cluster_pcsd_private_key_src: null
ha_cluster_pcsd_certificates: []

ha_cluster_cluster_name: my-cluster

ha_cluster_transport: {}
ha_cluster_totem: {}
ha_cluster_quorum: {}

ha_cluster_sbd_enabled: false
ha_cluster_sbd_options: []

ha_cluster_pcs_permission_list:
  - type: group
    name: haclient
    allow_list:
      - grant
      - read
      - write

ha_cluster_acls: {}
ha_cluster_cluster_properties: []
ha_cluster_node_options: []
ha_cluster_resource_defaults: {}
ha_cluster_resource_operation_defaults: {}

ha_cluster_resource_primitives: []
ha_cluster_resource_groups: []
ha_cluster_resource_clones: []
ha_cluster_resource_master_slave_clones: []
ha_cluster_resource_bundles: []

ha_cluster_stonith_levels: []

ha_cluster_constraints_location: []
ha_cluster_constraints_colocation: []
ha_cluster_constraints_order: []
ha_cluster_constraints_ticket: []

# If true, manage the high-availability service and the fence-virt port
# using the firewall role.
ha_cluster_manage_firewall: false

# If true, manage the ports belonging to the high-availability service
# and the fence-virt using the selinux role.
ha_cluster_manage_selinux: false

ha_cluster_qnetd:
  present: false
  regenerate_keys: false
  start_on_boot: true
