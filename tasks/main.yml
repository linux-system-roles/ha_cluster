# SPDX-License-Identifier: MIT
---
- name: Set platform/version specific variables
  include_vars: "{{ __ha_cluster_vars_file }}"
  loop:
    - "{{ ansible_facts['os_family'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_major_version'] }}.yml
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_version'] }}.yml
  vars:
    __ha_cluster_vars_file: "{{ role_path }}/vars/{{ item }}"
  when: __ha_cluster_vars_file is file

- name: Check and prepare role variables
  include_tasks: check-and-prepare-role-variables.yml

- name: Install and configure cluster packages
  include_tasks: install-and-configure-packages.yml

- name: Install and configure HA cluster
  block:
    - name: Configure firewall
      include_tasks: firewall.yml

    - name: Configure pcs / pcsd
      include_tasks: pcs-configure-pcs-pcsd.yml

    - name: Distribute fence-virt authkey
      include_tasks: distribute-fence-virt-key.yml

    - name: Configure cluster nodes
      include_tasks: cluster-setup.yml

    # TODO: implement qdevice detection once qdevice is supported by the role
    # - name: Fetch corosync quorum configuration
    #   command:
    #     cmd: pcs quorum config
    #   register: __ha_cluster_pcs_quorum_config
    #   run_once: yes
    #   check_mode: no
    #   changed_when: no
    #   # This reads corosync.conf from the nodes. The file is not sent to the
    #   # nodes in check mode.
    #   when: not ansible_check_mode

    - name: Check if qdevice is configured
      set_fact:
        __ha_cluster_qdevice_in_use: no
      run_once: yes

    - name: Enable or disable cluster services on boot
      include_tasks: cluster-enable-disable.yml

    - name: Pcs auth
      # Auth is run after corosync.conf has been distributed so that pcs
      # distributes pcs tokens in the cluster automatically.
      include_tasks: pcs-auth.yml

    - name: Start the cluster and reload corosync.conf
      include_tasks: cluster-start-and-reload.yml

    - name: Create and push CIB
      include_tasks: create-and-push-cib.yml

  when: ha_cluster_cluster_present

- name: Remove cluster configuration
  block:
    - name: Remove cluster configuration
      include_tasks: cluster-destroy-{{ __ha_cluster_pcs_provider }}.yml

    - name: Remove fence-virt authkey
      file:
        path: /etc/cluster/fence_xvm.key
        state: absent
  when: not ha_cluster_cluster_present
