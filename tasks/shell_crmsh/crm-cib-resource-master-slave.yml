# SPDX-License-Identifier: MIT
---
# Verify if resource.resource_id exists
- name: Verify resource presence {{ resource.resource_id }}
  ansible.builtin.command:
    cmd: |
      crm -c {{ __ha_cluster_crm_shadow }}
      configure show {{ resource.resource_id }}
  register: __ha_cluster_constraint_resource
  changed_when: false
  failed_when:
    - "'does not exist' in __ha_cluster_constraint_resource.stderr"

- name: Define master slave msl_ resource id '{{
    resource.id | d('msl_' + resource.resource_id) }}'
  ansible.builtin.set_fact:
    __ha_cluster_resource_id:
      "{{ resource.id if resource.id is defined
        else 'msl_' + resource.resource_id | quote }}"

# Verify if Shadow CIB already contains same resource id.
- name: Verify master slave clone presence {{ __ha_cluster_resource_id }}
  ansible.builtin.command:
    cmd: |
      crm -c {{ __ha_cluster_crm_shadow }}
      configure show {{ __ha_cluster_resource_id }}
  register: __ha_cluster_resource_status
  changed_when: false
  failed_when: false

# Delete resource id in Shadow CIB to avoid errors during cibadmin patch.
- name: Delete present master slave clone {{ __ha_cluster_resource_id }}
  ansible.builtin.command:
    cmd: |
      crm --force -c {{ __ha_cluster_crm_shadow }}
      configure delete {{ __ha_cluster_resource_id }}
  when: __ha_cluster_resource_status.rc == 0
  check_mode: false
  changed_when: not ansible_check_mode

- name: Configure master slave clone {{ __ha_cluster_resource_id }}
  ansible.builtin.command:
    cmd: |
      crm -c {{ __ha_cluster_crm_shadow }}
      configure ms {{ __ha_cluster_resource_id }}
      {{ resource.resource_id | quote }} \
      {% if resource.meta_attrs[0].attrs | default(False) %}
        meta
        {% for attr in resource.meta_attrs[0].attrs -%}
          {{ attr.name | quote }}={{ attr.value | quote }}
        {% endfor %}
      {% endif %}
  check_mode: false
  changed_when: not ansible_check_mode
