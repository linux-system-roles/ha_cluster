{{ ansible_managed | comment }}
{{ "system_role:ha_cluster" | comment(prefix="", postfix="") }}
totem {
{% if ha_cluster_totem and ha_cluster_totem.options | d({}) %}
{% if ha_cluster_totem.options | selectattr('name', 'equalto', 'version') | list | length == 0 %}
        version: 2
{% endif %}
{% for option in ha_cluster_totem.options %}
        {{ option.name | quote }}: {{ option.value | quote }}
{% endfor %}
{% if ha_cluster_totem.options | selectattr('name', 'equalto', 'transport') | list | length == 0 %}
        transport: udpu        
{% endif %}
{% else %}
        # Default values are configured because ha_cluster_totem.options was not defined
        version: 2
        transport: udpu
{% endif %}
}
nodelist {
{% for host in ansible_play_batch %}
       node {
               nodeid: {{ loop.index }}
               ring0_addr: {{ hostvars[host]['ansible_facts']['eth0']['ipv4']['address'] }}
               {% if hostvars[host]['ansible_facts']['eth1']['ipv4']['address'] is defined %}
               ring1_addr: {{ hostvars[host]['ansible_facts']['eth1']['ipv4']['address'] }}
               {% endif -%}
       }
{% endfor %}
}
quorum {
{% if ha_cluster_quorum and ha_cluster_quorum.options | d({}) %}
{% for option in ha_cluster_quorum.options | d([]) %}
        {{ option.name | quote }}: {{ option.value | quote }} 
{% endfor %}
{% if ha_cluster_quorum.options | selectattr('name', 'equalto', 'provider') | list | length == 0 %}
        provider: corosync_votequorum      
{% endif %}
{% if ha_cluster_quorum.options | selectattr('name', 'equalto', 'two_node') | list | length == 0 %}
        two_node: 1    
{% endif %}
{% else %}
        # Default values are configured because ha_cluster_quorum.options was not defined
        provider: corosync_votequorum
        two_node: 1
{% endif %}
}